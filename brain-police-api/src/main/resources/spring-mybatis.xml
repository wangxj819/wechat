<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <bean id="propertyConfigurer" class="com.kxjl.arsenal.config.SpringConfigurer">
    </bean>
    <!--<bean id="testBean" class="com.kxjl.repository.bean.TestBean">-->
    <!--<constructor-arg name="name" value="${public.testBean.name}"></constructor-arg>-->
    <!--<constructor-arg name="age" value="${public.testBean.age}"></constructor-arg>-->
    <!--</bean>-->
    <!-- 配置数据源 -->
    <!--<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
    <!--init-method="init" destroy-method="close">-->

    <!--<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />-->
    <!--<property name="url" value="jdbc:oracle:thin:@172.19.11.206:1521:ora11g" />-->
    <!--<property name="username" value="yungo_css" />-->
    <!--<property name="password" value="Yungo2016" />-->

    <!--<property name="initialSize" value="10" />-->
    <!--<property name="maxActive" value="200" />-->
    <!--<property name="minIdle" value="10" />-->
    <!--<property name="maxWait" value="6000" />-->

    <!--<property name="validationQuery" value="SELECT 1 from dual" />-->

    <!--<property name="testOnBorrow" value="false" />-->
    <!--<property name="testOnReturn" value="false" />-->
    <!--<property name="testWhileIdle" value="true" />-->

    <!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->
    <!--<property name="minEvictableIdleTimeMillis" value="25200000" />-->
    <!--<property name="removeAbandoned" value="false" />-->
    <!--<property name="removeAbandonedTimeout" value="1800" />-->
    <!--<property name="logAbandoned" value="true" />-->
    <!--<property name="filters" value="mergeStat" />-->
    <!--</bean>-->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">

        <property name="driverClassName" value="${servers.wechat.jdbc.driverClassName}"/>
        <property name="url" value="${servers.wechat.jdbc.url}"/>
        <property name="username" value="${servers.wechat.jdbc.username}"/>
        <property name="password" value="${servers.wechat.jdbc.password}"/>

        <property name="initialSize" value="${servers.wechat.jdbc.initialSize}"/>
        <property name="maxActive" value="${servers.wechat.jdbc.maxActive}"/>
        <property name="minIdle" value="${servers.wechat.jdbc.minIdle}"/>
        <property name="maxWait" value="${servers.wechat.jdbc.maxWait}"/>

        <property name="validationQuery" value="${servers.wechat.jdbc.validationQuery}"/>

        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <property name="testWhileIdle" value="true"/>

        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="25200000"/>
        <property name="removeAbandoned" value="false"/>
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="logAbandoned" value="true"/>
        <property name="filters" value="mergeStat"/>
    </bean>

    <!-- myBatis文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybaits-config.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kxjl.brain.police.repository.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="batchSave*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="query" read-only="true"/>
            <tx:method name="search*" read-only="true"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut"
                      expression="execution(* com.kxjl.brain.police.service.api.*.*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut"
                     advice-ref="transactionAdvice"/>
    </aop:config>

    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor"
          class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
          scope="prototype">
        <property name="patterns">
            <list>
                <value>com.kxjl.brain.police.service.api.*.*.impl</value>
            </list>
        </property>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor"
                     pointcut-ref="druid-stat-pointcut"/>
    </aop:config>
</beans>